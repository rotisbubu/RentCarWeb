@model IEnumerable<RentCarWeb.Models.CarView>

@{
    ViewData["Title"] = "Car Page";
    int pageSize = 6;
    int currentPage = 1;

    if (int.TryParse(ViewContext.HttpContext.Request.Query["page"], out int page))
    {
        currentPage = page;
    }

    var pickupDateQuery = ViewContext.HttpContext.Request.Query["pickupDate"];
    var returnDateQuery = ViewContext.HttpContext.Request.Query["returnDate"];
    var yearFilterQuery = ViewContext.HttpContext.Request.Query["yearFilter"];

    var currentSortOrder = ViewContext.HttpContext.Request.Query["sortOrder"];
    string optionsHtml = "<option value='Asc' " +
                         (currentSortOrder == "Asc" ? "selected" : "") +
                         ">Harga Terendah - Tertinggi</option>" +
                         "<option value='Desc' " +
                         (currentSortOrder == "Desc" ? "selected" : "") +
                         ">Harga Tertinggi - Terendah</option>";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
</head>
<body>
    <div id="side-bar" class="side-bar">
        <span class="close-btn" onclick="toggleSidebar()">&times;</span>
        <a href="/Home/Index">Home</a>
        <a href="/Riwayat/Index">Riwayat Penyewaan</a>
        <a href="/Contact/Index">Kontak Kami</a>
    </div>
    <div class="nav-bar">
        <div class="left-content">
            <div class="hamburger" onclick="toggleSidebar()">&#9776;</div>
            <div id="Title">RentCar</div>
        </div>
        <div class="right-content">
            @if (string.IsNullOrEmpty(@ViewData["Username"] as string))
            {
                <a href="/Account/Login" class="btn">Login</a>
                <a href="/Account/Register" class="btn">Registrasi</a>
            }
            else
            {
                <h2>Hi, @ViewData["Username"]!</h2>
            }
        </div>
    </div>
    <div class="main-content">
        <div class="welcome-text">Selamat Datang di Rental Mobil Kami</div>
        <div class="box">
            <form id="cari-form"method="get" action="/Car/Index" class="forms">
                <div class="pickup">
                    <div class="text1">Pickup Date:</div>
                    <input type="date" name="pickupDate" placeholder="Select Pickup Date" required />
                </div>
                <div class="return">
                    <div class="text1">Return Date:</div>
                    <input type="date" name="returnDate" placeholder="Select Return Date" required />
                </div>
                <div class="year">
                    <div class="text1">Filter Tahun Pembuatan</div>
                    <select name="yearFilter">
                        <option value="all" selected>Semua Tahun</option>
                        @foreach (var year in ViewBag.Years)
                        {
                            <option value="@year">@year</option>
                        }
                    </select>
                </div>
            </form>
            <button type="submit" form="cari-form">Cari</button>
        </div>

        <div class="sort-by">
            <form method="get" action="/Car/Index">
                <input type="hidden" name="pickupDate" value="@pickupDateQuery" />
                <input type="hidden" name="returnDate" value="@returnDateQuery" />
                <input type="hidden" name="yearFilter" value="@yearFilterQuery" />

                <label for="sortOrder" class="text1">Sortir Berdasarkan</label>
                <select id="sortOrder" name="sortOrder" onchange="this.form.submit()">
                    @Html.Raw(optionsHtml)
                </select>
            </form>
        </div>

        <div class="container">
            @if (Model == null || !Model.Any())
            {
                <p>No cars are available at this time.</p>
            }
            else
            {
                var cars = Model.Skip((currentPage - 1) * pageSize).Take(pageSize);
                foreach (var car in cars)
                {
                    <div class="card">
                        <img src="@car.ImageLink" alt="@car.name @car.model" />
                        <h3>@car.name @car.model (@car.year)</h3>
                        <p>Harga: Rp. @car.price_per_day / hari</p>
                        <a href="/Car/Rental?id=@car.Car_Id&imageLink=@car.ImageLink" class="btn">Sewa Sekarang</a>
                    </div>
                }
            }
        </div>

        <div class="pagination">
            @if (currentPage > 1)
            {
                <button onclick="window.location.href='?page=@(currentPage - 1)&pickupDate=@pickupDateQuery&returnDate=@returnDateQuery&yearFilter=@yearFilterQuery&sortOrder=@ViewContext.HttpContext.Request.Query["sortOrder"]'">Previous</button>
            }

            @{
                int totalItems = Model.Count();
                int totalPages = (int)Math.Ceiling((double)totalItems / pageSize);
            }

            @for (int i = 1; i <= totalPages; i++)
            {
                <button class="page-btn @(i == currentPage ? "active" : "")"
                        onclick="window.location.href='?page=@i&pickupDate=@pickupDateQuery&returnDate=@returnDateQuery&yearFilter=@yearFilterQuery&sortOrder=@ViewContext.HttpContext.Request.Query["sortOrder"]'">
                    @i
                </button>
            }

            @if (currentPage < totalPages)
            {
                <button onclick="window.location.href='?page=@(currentPage + 1)&pickupDate=@pickupDateQuery&returnDate=@returnDateQuery&yearFilter=@yearFilterQuery&sortOrder=@ViewContext.HttpContext.Request.Query["sortOrder"]'">Next</button>
            }
        </div>

    </div>
</body>
</html>

<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        justify-content: center;
        align-items: center;
        display: flex;
        background-color: #f6f2f7;
        font-family: Arial, sans-serif;
        max-width: 100%;
    }

    /* ----- navbar settings----- */
    .nav-bar {
        background-color: #e5cffe;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        width: 100%;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1000;
    }

    .left-content {
        display: flex;
        align-items: center;
    }

    #Title {
        padding-left: 10px;
        font-weight: bold;
        color: #615c74;
    }

    .right-content {
        display: flex;
        gap: 10px;
    }

    .right-content h2 {
        font-size: 15px;
        font-weight: 100;
    }

    .right-content .btn {
        display: inline-block;
        padding: 10px 20px;
        background-color: #ff9999;
        color: white;
        text-decoration: none;
        border-radius: 3px;
        border: none;
        cursor: pointer;
    }

    .right-content .btn:hover {
        background-color: #ff6666;
    }

    .side-bar {
        height: 100%;
        width: 250px;
        position: fixed;
        top: 0;
        left: -250px;
        background-color: #6d597a;
        overflow-x: hidden;
        transition: 0.3s;
        padding-top: 60px;
        z-index: 1001;
    }

    .side-bar a {
        padding: 10px 15px;
        text-decoration: none;
        font-size: 20px;
        color: #fff;
        display: block;
        transition: 0.3s;
    }

    .side-bar a:hover {
        background-color: #4e4465;
    }

    .side-bar .close-btn {
        position: absolute;
        top: 10px;
        right: 20px;
        font-size: 30px;
        cursor: pointer;
        color: #fff;
    }

    .side-bar.active {
        left: 0;
    }

    /* ----- main content settings----- */
    .main-content {
        display: block;
        padding-top: 50px;
    }

    .welcome-text {
        font-weight: bold;
        color: #615c74;
        font-size: 25px;
        text-align: center;
        margin-bottom: 20px;
    }

    .box {
        padding: 30px;
        border: 1px solid #ccc;
        border-radius: 10px;
        background-color: #bde0fe;
        box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.1);
        max-width: 1200px;
        margin: 0 auto;
        display: flex;
        gap: 10px;
    }
    .box button {
        background-color: #ffcad4;
        color: white;
        border: none;
        border-radius: 2px;
        padding: 8px;
        cursor: pointer;
        padding-left: 10px;
        padding-right: 10px;
        margin-top: 19px;
    }

    .box button:hover {
        background-color: #ffe9ec;
    }

    .forms {
        display: flex;
        gap: 10px;
    }

    .text1 {
        font-weight: bold;
    }

    input, select {
        width: 100%;
        padding: 7px;
        box-sizing: border-box;
        border: none;
        border-radius: 5px;
    }

    .sort-by {
        display: flex;
        align-items: center;
        justify-content: flex-end;
        padding-top: 40px;
    }
    .sort-by label{
        padding-right: 10px;
    }
    .sort-by select {
        width: 200px;
    }

    .container {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        grid-template-rows: repeat(2, auto);
        gap: 20px;
        justify-items: center;
        margin-top: 20px;
        max-width: 1000px;
        padding: 20px;
    }

    .card {
        width: 250px;
        border: 1px solid #ccc;
        border-radius: 10px;
        padding: 16px;
        background-color: #bde0fe;
        box-shadow: 2px 2px 12px rgba(0, 0, 0, 0.1);
        text-align: center;
    }
    .card img {
        max-width: 210px;
        border-radius: 5px;
    }
    .card h3 {
        color: #6b5a73;
        padding-top: 10px;
        padding-bottom: 10px;
    }
    .card p {
        font-size: 12px;
        color: grey;
        padding-bottom: 20px;
    }
    .card a{
        background-color: #ffdeb9;
        color: white;
        border: none;
        border-radius: 5px;
        padding-left: 20px;
        padding-right: 20px;
        padding: 8px;
        cursor: pointer;
        margin-top: 10px;
        text-decoration: none;
    }
    .card a:hover{
        background-color: #f4ece9;
    }

    .pagination {
        text-align: center;
        margin-top: 20px;
    }

    .pagination button {
        padding: 10px;
        margin: 5px;
        background-color: #f9a8aa;
        color: black;
        border: none;
        cursor: pointer;
        border-radius: 5px;
    }

    .pagination button:hover {
        background-color: #ffe9ec;
    }

    .page-btn.active {
        background-color: #bde0fe;
        color: black;
    }
</style>

<script>
    setTimeout(function() {
        location.reload();
    }, 600000);

    function toggleSidebar() {
        var sidebar = document.getElementById("side-bar");
        sidebar.classList.toggle("active");
    }
</script>
